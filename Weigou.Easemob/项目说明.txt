一、环信服务器端REST平台概述

（1）关于REST

REST（Representational State Transfer）是一种轻量级的Web Service架构风格,
可以翻译成“表述性状态转移”，实现和操作明显比SOAP和XML-RPC更为简洁，可以完全
通过HTTP协议实现，还可以利用缓存Cache来提高响应速度，性能、效率和易用性上都
优于SOAP协议.REST架构遵循了CRUD原则，CRUD原则对于资源只需要四种行为：Create（创建）、Read（读取）、Update（更新）和Delete（删除）就可以完成对其操作和处理.
这四个操作是一种原子操作，对资源的操作包括获取、创建、修改和删除资源的操作正好对应HTTP协议提供的GET、POST、PUT和DELETE方法，
因此REST把HTTP对一个URL资源的操作限制在GET、POST、PUT和DELETE这四个之内.这种针对网络应用的设计和开发方式，可以降低开发的复杂性，提高系统的可伸缩性.

（2）REST平台体系

平台提供的是一个多租户用户体系，资源以集合【Collection】的形式来描述,
这里所说的Collection包括DataBase、企业(orgs)、应用(apps)、IM用户(users)、群组(chatgroups)、消息(chatmessages)、文件(chatfiles)等等，
之间的包含关系是
DB = {org1, org2, …} 
org = {app1, app2, …} 
app = {users, messages, chatfiles, chatmessages, chatgroups, …} 
users = {user1, user2, …} 
messages = {message1, message2, …} 
chatfiles = {chatfile1, chatfile2, …} 
chatmessages = {chatmessage1, chatmessage2, …} 
chatgroups = {group1, group2, …} 
多租户是指软件架构支持一个实例服务多个用户（Customer），每一个用户被称之为租户（Tenant），
软件给予租户可以对系统进行部分定制的能力，如用户界面颜色或业务规则，但是他们不能定制修改软件的代码.
其实在云计算领域，多租户的含义已被扩展.例如，软件即服务（SaaS）提供者，利用运行在一个数据库实例上的应用系统，
向多个用户提供Web访问服务.在这样的场景下，租户之间的数据是隔离的，并且保证每个用户的数据对其他租户不可见.
在环信服务体系中，不同org之间的用户数据相互隔离，同一个org下不同app之间的用户数据相互隔离.


服务器端集成(REST API)：http://docs.easemob.com/doku.php?id=start:100serverintegration
相关下载：http://www.easemob.com/downloads
